LOAD 'pg_hint_plan';
ALTER SYSTEM SET session_preload_libraries TO 'pg_hint_plan';
SET pg_hint_plan.enable_hint TO on;
SET pg_hint_plan.debug_print TO on;
SET client_min_messages TO LOG;
CREATE TABLE s1.tl (a int);
INSERT INTO s1.tl (SELECT a FROM generate_series(0, 100000) a);
-- Queries on ordinary tables
EXPLAIN (COSTS false) SELECT * FROM s1.t1;
   QUERY PLAN   
----------------
 Seq Scan on t1
(1 row)

SET parallel_setup_cost to 0;
SET parallel_tuple_cost to 0;
SET min_parallel_relation_size to 0;
/*+Parallel(t1 10)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1;
LOG:  pg_hint_plan:
used hint:
Parallel(t1 10 soft)
not used hint:
duplication hint:
error hint:

          QUERY PLAN           
-------------------------------
 Gather
   Workers Planned: 2
   ->  Parallel Seq Scan on t1
(3 rows)

/*+Parallel(t1 10 soft)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1;
LOG:  pg_hint_plan:
used hint:
Parallel(t1 10 soft)
not used hint:
duplication hint:
error hint:

          QUERY PLAN           
-------------------------------
 Gather
   Workers Planned: 2
   ->  Parallel Seq Scan on t1
(3 rows)

SET parallel_setup_cost to DEFAULT;
SET parallel_tuple_cost to DEFAULT;
SET min_parallel_relation_size to DEFAULT;
/*+Parallel(t1 10 hard)*/
EXPLAIN (COSTS false) SELECT * FROM s1.t1;
LOG:  pg_hint_plan:
used hint:
Parallel(t1 10 hard)
not used hint:
duplication hint:
error hint:

          QUERY PLAN           
-------------------------------
 Gather
   Workers Planned: 10
   ->  Parallel Seq Scan on t1
(3 rows)

-- Queries on inheritance tables
SET parallel_setup_cost to 0;
SET parallel_tuple_cost to 0;
SET min_parallel_relation_size to 0;
/*+Parallel(p1 10)*/
EXPLAIN (COSTS false) SELECT * FROM p1;
LOG:  pg_hint_plan:
used hint:
Parallel(p1 10 soft)
not used hint:
duplication hint:
error hint:

                QUERY PLAN                 
-------------------------------------------
 Gather
   Workers Planned: 1
   ->  Append
         ->  Parallel Seq Scan on p1
         ->  Parallel Seq Scan on p1_c1
         ->  Parallel Seq Scan on p1_c2
         ->  Parallel Seq Scan on p1_c3
         ->  Parallel Seq Scan on p1_c4
         ->  Parallel Seq Scan on p1_c1_c1
         ->  Parallel Seq Scan on p1_c1_c2
         ->  Parallel Seq Scan on p1_c3_c1
         ->  Parallel Seq Scan on p1_c3_c2
(12 rows)

SET parallel_setup_cost to DEFAULT;
SET parallel_tuple_cost to DEFAULT;
SET min_parallel_relation_size to DEFAULT;
/*+Parallel(p1 10 hard)*/
EXPLAIN (COSTS false) SELECT * FROM p1;
LOG:  pg_hint_plan:
used hint:
Parallel(p1 10 hard)
not used hint:
duplication hint:
error hint:

                QUERY PLAN                 
-------------------------------------------
 Gather
   Workers Planned: 10
   ->  Append
         ->  Parallel Seq Scan on p1
         ->  Parallel Seq Scan on p1_c1
         ->  Parallel Seq Scan on p1_c2
         ->  Parallel Seq Scan on p1_c3
         ->  Parallel Seq Scan on p1_c4
         ->  Parallel Seq Scan on p1_c1_c1
         ->  Parallel Seq Scan on p1_c1_c2
         ->  Parallel Seq Scan on p1_c3_c1
         ->  Parallel Seq Scan on p1_c3_c2
(12 rows)

-- hinting on children don't work but enables parallel
/*+Parallel(p1_c1 10 hard)*/
EXPLAIN (COSTS false) SELECT * FROM p1;
LOG:  pg_hint_plan:
used hint:
not used hint:
Parallel(p1_c1 10 hard)
duplication hint:
error hint:

                QUERY PLAN                 
-------------------------------------------
 Gather
   Workers Planned: 1
   ->  Append
         ->  Parallel Seq Scan on p1
         ->  Parallel Seq Scan on p1_c1
         ->  Parallel Seq Scan on p1_c2
         ->  Parallel Seq Scan on p1_c3
         ->  Parallel Seq Scan on p1_c4
         ->  Parallel Seq Scan on p1_c1_c1
         ->  Parallel Seq Scan on p1_c1_c2
         ->  Parallel Seq Scan on p1_c3_c1
         ->  Parallel Seq Scan on p1_c3_c2
(12 rows)

-- Joins
EXPLAIN (COSTS false) SELECT * FROM p1_c1 join p2_c1 on p1_c1.id = p2_c1.id;
               QUERY PLAN               
----------------------------------------
 Hash Join
   Hash Cond: (p1_c1.id = p2_c1.id)
   ->  Append
         ->  Seq Scan on p1_c1
         ->  Seq Scan on p1_c1_c1
         ->  Seq Scan on p1_c1_c2
   ->  Hash
         ->  Append
               ->  Seq Scan on p2_c1
               ->  Seq Scan on p2_c1_c1
               ->  Seq Scan on p2_c1_c2
(11 rows)

/*+Parallel(p1_c1 10 hard)*/
EXPLAIN (COSTS false) SELECT * FROM p1_c1 join p2_c1 on p1_c1.id = p2_c1.id;
LOG:  pg_hint_plan:
used hint:
Parallel(p1_c1 10 hard)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                       
-------------------------------------------------------
 Hash Join
   Hash Cond: (p1_c1.id = p2_c1.id)
   ->  Gather
         Workers Planned: 10
         ->  Append
               ->  Parallel Seq Scan on p1_c1
               ->  Parallel Seq Scan on p1_c1_c1
               ->  Parallel Seq Scan on p1_c1_c2
   ->  Hash
         ->  Gather
               Workers Planned: 1
               ->  Append
                     ->  Parallel Seq Scan on p2_c1
                     ->  Parallel Seq Scan on p2_c1_c1
                     ->  Parallel Seq Scan on p2_c1_c2
(15 rows)

/*+Parallel(p2_c1 10 hard)*/
EXPLAIN (COSTS false) SELECT * FROM p1_c1 join p2_c1 on p1_c1.id = p2_c1.id;
LOG:  pg_hint_plan:
used hint:
Parallel(p2_c1 10 hard)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                       
-------------------------------------------------------
 Hash Join
   Hash Cond: (p1_c1.id = p2_c1.id)
   ->  Gather
         Workers Planned: 1
         ->  Append
               ->  Parallel Seq Scan on p1_c1
               ->  Parallel Seq Scan on p1_c1_c1
               ->  Parallel Seq Scan on p1_c1_c2
   ->  Hash
         ->  Gather
               Workers Planned: 10
               ->  Append
                     ->  Parallel Seq Scan on p2_c1
                     ->  Parallel Seq Scan on p2_c1_c1
                     ->  Parallel Seq Scan on p2_c1_c2
(15 rows)

/*+Parallel(p1_c1 10 hard) Parallel(p2_c1 10 hard)*/
EXPLAIN (COSTS false) SELECT * FROM p1_c1 join p2_c1 on p1_c1.id = p2_c1.id;
LOG:  pg_hint_plan:
used hint:
Parallel(p1_c1 10 hard)
Parallel(p2_c1 10 hard)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                       
-------------------------------------------------------
 Hash Join
   Hash Cond: (p1_c1.id = p2_c1.id)
   ->  Gather
         Workers Planned: 10
         ->  Append
               ->  Parallel Seq Scan on p1_c1
               ->  Parallel Seq Scan on p1_c1_c1
               ->  Parallel Seq Scan on p1_c1_c2
   ->  Hash
         ->  Gather
               Workers Planned: 10
               ->  Append
                     ->  Parallel Seq Scan on p2_c1
                     ->  Parallel Seq Scan on p2_c1_c1
                     ->  Parallel Seq Scan on p2_c1_c2
(15 rows)

-- Joins on inheritance tables
SET parallel_setup_cost to 0;
SET parallel_tuple_cost to 0;
SET min_parallel_relation_size to 0;
/*+Parallel(p1 10)*/
EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
LOG:  pg_hint_plan:
used hint:
Parallel(p1 10 soft)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                       
-------------------------------------------------------
 Hash Join
   Hash Cond: (p1.id = p2.id)
   ->  Gather
         Workers Planned: 1
         ->  Append
               ->  Parallel Seq Scan on p1
               ->  Parallel Seq Scan on p1_c1
               ->  Parallel Seq Scan on p1_c2
               ->  Parallel Seq Scan on p1_c3
               ->  Parallel Seq Scan on p1_c4
               ->  Parallel Seq Scan on p1_c1_c1
               ->  Parallel Seq Scan on p1_c1_c2
               ->  Parallel Seq Scan on p1_c3_c1
               ->  Parallel Seq Scan on p1_c3_c2
   ->  Hash
         ->  Gather
               Workers Planned: 1
               ->  Append
                     ->  Parallel Seq Scan on p2
                     ->  Parallel Seq Scan on p2_c1
                     ->  Parallel Seq Scan on p2_c2
                     ->  Parallel Seq Scan on p2_c3
                     ->  Parallel Seq Scan on p2_c4
                     ->  Parallel Seq Scan on p2_c1_c1
                     ->  Parallel Seq Scan on p2_c1_c2
                     ->  Parallel Seq Scan on p2_c3_c1
                     ->  Parallel Seq Scan on p2_c3_c2
(27 rows)

SET parallel_setup_cost to DEFAULT;
SET parallel_tuple_cost to DEFAULT;
SET min_parallel_relation_size to DEFAULT;
/*+Parallel(p2 10 hard)*/
EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
LOG:  pg_hint_plan:
used hint:
Parallel(p2 10 hard)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                       
-------------------------------------------------------
 Hash Join
   Hash Cond: (p1.id = p2.id)
   ->  Gather
         Workers Planned: 1
         ->  Append
               ->  Parallel Seq Scan on p1
               ->  Parallel Seq Scan on p1_c1
               ->  Parallel Seq Scan on p1_c2
               ->  Parallel Seq Scan on p1_c3
               ->  Parallel Seq Scan on p1_c4
               ->  Parallel Seq Scan on p1_c1_c1
               ->  Parallel Seq Scan on p1_c1_c2
               ->  Parallel Seq Scan on p1_c3_c1
               ->  Parallel Seq Scan on p1_c3_c2
   ->  Hash
         ->  Gather
               Workers Planned: 10
               ->  Append
                     ->  Parallel Seq Scan on p2
                     ->  Parallel Seq Scan on p2_c1
                     ->  Parallel Seq Scan on p2_c2
                     ->  Parallel Seq Scan on p2_c3
                     ->  Parallel Seq Scan on p2_c4
                     ->  Parallel Seq Scan on p2_c1_c1
                     ->  Parallel Seq Scan on p2_c1_c2
                     ->  Parallel Seq Scan on p2_c3_c1
                     ->  Parallel Seq Scan on p2_c3_c2
(27 rows)

/*+Parallel(p2 10 hard) Parallel(p1 5 hard) */
EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
LOG:  pg_hint_plan:
used hint:
Parallel(p1 5 hard)
Parallel(p2 10 hard)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                       
-------------------------------------------------------
 Hash Join
   Hash Cond: (p1.id = p2.id)
   ->  Gather
         Workers Planned: 5
         ->  Append
               ->  Parallel Seq Scan on p1
               ->  Parallel Seq Scan on p1_c1
               ->  Parallel Seq Scan on p1_c2
               ->  Parallel Seq Scan on p1_c3
               ->  Parallel Seq Scan on p1_c4
               ->  Parallel Seq Scan on p1_c1_c1
               ->  Parallel Seq Scan on p1_c1_c2
               ->  Parallel Seq Scan on p1_c3_c1
               ->  Parallel Seq Scan on p1_c3_c2
   ->  Hash
         ->  Gather
               Workers Planned: 10
               ->  Append
                     ->  Parallel Seq Scan on p2
                     ->  Parallel Seq Scan on p2_c1
                     ->  Parallel Seq Scan on p2_c2
                     ->  Parallel Seq Scan on p2_c3
                     ->  Parallel Seq Scan on p2_c4
                     ->  Parallel Seq Scan on p2_c1_c1
                     ->  Parallel Seq Scan on p2_c1_c2
                     ->  Parallel Seq Scan on p2_c3_c1
                     ->  Parallel Seq Scan on p2_c3_c2
(27 rows)

-- Mixture with a scan hint
-- p1 can be parallel
/*+Parallel(p1 10 hard) IndexScan(p2) */
EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
LOG:  pg_hint_plan:
used hint:
IndexScan(p2)
Parallel(p1 10 hard)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                       
-------------------------------------------------------
 Hash Join
   Hash Cond: (p1.id = p2.id)
   ->  Gather
         Workers Planned: 10
         ->  Append
               ->  Parallel Seq Scan on p1
               ->  Parallel Seq Scan on p1_c1
               ->  Parallel Seq Scan on p1_c2
               ->  Parallel Seq Scan on p1_c3
               ->  Parallel Seq Scan on p1_c4
               ->  Parallel Seq Scan on p1_c1_c1
               ->  Parallel Seq Scan on p1_c1_c2
               ->  Parallel Seq Scan on p1_c3_c1
               ->  Parallel Seq Scan on p1_c3_c2
   ->  Hash
         ->  Gather
               Workers Planned: 1
               ->  Append
                     ->  Parallel Seq Scan on p2
                     ->  Parallel Seq Scan on p2_c1
                     ->  Parallel Seq Scan on p2_c2
                     ->  Parallel Seq Scan on p2_c3
                     ->  Parallel Seq Scan on p2_c4
                     ->  Parallel Seq Scan on p2_c1_c1
                     ->  Parallel Seq Scan on p2_c1_c2
                     ->  Parallel Seq Scan on p2_c3_c1
                     ->  Parallel Seq Scan on p2_c3_c2
(27 rows)

-- seqscan doesn't harm parallelism
/*+Parallel(p1 10 hard) SeqScan(p1) */
EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
LOG:  pg_hint_plan:
used hint:
SeqScan(p1)
Parallel(p1 10 hard)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                       
-------------------------------------------------------
 Hash Join
   Hash Cond: (p1.id = p2.id)
   ->  Gather
         Workers Planned: 10
         ->  Append
               ->  Parallel Seq Scan on p1
               ->  Parallel Seq Scan on p1_c1
               ->  Parallel Seq Scan on p1_c2
               ->  Parallel Seq Scan on p1_c3
               ->  Parallel Seq Scan on p1_c4
               ->  Parallel Seq Scan on p1_c1_c1
               ->  Parallel Seq Scan on p1_c1_c2
               ->  Parallel Seq Scan on p1_c3_c1
               ->  Parallel Seq Scan on p1_c3_c2
   ->  Hash
         ->  Gather
               Workers Planned: 1
               ->  Append
                     ->  Parallel Seq Scan on p2
                     ->  Parallel Seq Scan on p2_c1
                     ->  Parallel Seq Scan on p2_c2
                     ->  Parallel Seq Scan on p2_c3
                     ->  Parallel Seq Scan on p2_c4
                     ->  Parallel Seq Scan on p2_c1_c1
                     ->  Parallel Seq Scan on p2_c1_c2
                     ->  Parallel Seq Scan on p2_c3_c1
                     ->  Parallel Seq Scan on p2_c3_c2
(27 rows)

-- parallelism is not available for the case
/*+Parallel(p1 10 hard) IndexScan(p1) */
EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
LOG:  pg_hint_plan:
used hint:
IndexScan(p1)
Parallel(p1 10 hard)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                       
-------------------------------------------------------
 Hash Join
   Hash Cond: (p1.id = p2.id)
   ->  Gather
         Workers Planned: 10
         ->  Append
               ->  Parallel Seq Scan on p1
               ->  Parallel Seq Scan on p1_c1
               ->  Parallel Seq Scan on p1_c2
               ->  Parallel Seq Scan on p1_c3
               ->  Parallel Seq Scan on p1_c4
               ->  Parallel Seq Scan on p1_c1_c1
               ->  Parallel Seq Scan on p1_c1_c2
               ->  Parallel Seq Scan on p1_c3_c1
               ->  Parallel Seq Scan on p1_c3_c2
   ->  Hash
         ->  Gather
               Workers Planned: 1
               ->  Append
                     ->  Parallel Seq Scan on p2
                     ->  Parallel Seq Scan on p2_c1
                     ->  Parallel Seq Scan on p2_c2
                     ->  Parallel Seq Scan on p2_c3
                     ->  Parallel Seq Scan on p2_c4
                     ->  Parallel Seq Scan on p2_c1_c1
                     ->  Parallel Seq Scan on p2_c1_c2
                     ->  Parallel Seq Scan on p2_c3_c1
                     ->  Parallel Seq Scan on p2_c3_c2
(27 rows)

-- Parallel on UNION
EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
         QUERY PLAN         
----------------------------
 Append
   ->  Seq Scan on p1
   ->  Seq Scan on p1_c1
   ->  Seq Scan on p1_c2
   ->  Seq Scan on p1_c3
   ->  Seq Scan on p1_c4
   ->  Seq Scan on p1_c1_c1
   ->  Seq Scan on p1_c1_c2
   ->  Seq Scan on p1_c3_c1
   ->  Seq Scan on p1_c3_c2
   ->  Seq Scan on p2
   ->  Seq Scan on p2_c1
   ->  Seq Scan on p2_c2
   ->  Seq Scan on p2_c3
   ->  Seq Scan on p2_c4
   ->  Seq Scan on p2_c1_c1
   ->  Seq Scan on p2_c1_c2
   ->  Seq Scan on p2_c3_c1
   ->  Seq Scan on p2_c3_c2
(19 rows)

-- some of the scans are not parallel, so this cannot be parallel
SET parallel_setup_cost to 0;
SET parallel_tuple_cost to 0;
SET min_parallel_relation_size to 0;
SET max_parallel_workers_per_gather to 0;
/*+Parallel(p1 10) */
EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
LOG:  pg_hint_plan:
used hint:
Parallel(p1 10 soft)
not used hint:
duplication hint:
error hint:

                QUERY PLAN                 
-------------------------------------------
 Gather
   Workers Planned: 1
   ->  Append
         ->  Parallel Seq Scan on p1
         ->  Parallel Seq Scan on p1_c1
         ->  Parallel Seq Scan on p1_c2
         ->  Parallel Seq Scan on p1_c3
         ->  Parallel Seq Scan on p1_c4
         ->  Parallel Seq Scan on p1_c1_c1
         ->  Parallel Seq Scan on p1_c1_c2
         ->  Parallel Seq Scan on p1_c3_c1
         ->  Parallel Seq Scan on p1_c3_c2
         ->  Parallel Seq Scan on p2
         ->  Parallel Seq Scan on p2_c1
         ->  Parallel Seq Scan on p2_c2
         ->  Parallel Seq Scan on p2_c3
         ->  Parallel Seq Scan on p2_c4
         ->  Parallel Seq Scan on p2_c1_c1
         ->  Parallel Seq Scan on p2_c1_c2
         ->  Parallel Seq Scan on p2_c3_c1
         ->  Parallel Seq Scan on p2_c3_c2
(21 rows)

-- all children are parallel, so this can be parallel
/*+Parallel(p1 10) Parallel(p2 10) */
EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
LOG:  pg_hint_plan:
used hint:
Parallel(p1 10 soft)
Parallel(p2 10 soft)
not used hint:
duplication hint:
error hint:

                QUERY PLAN                 
-------------------------------------------
 Gather
   Workers Planned: 1
   ->  Append
         ->  Parallel Seq Scan on p1
         ->  Parallel Seq Scan on p1_c1
         ->  Parallel Seq Scan on p1_c2
         ->  Parallel Seq Scan on p1_c3
         ->  Parallel Seq Scan on p1_c4
         ->  Parallel Seq Scan on p1_c1_c1
         ->  Parallel Seq Scan on p1_c1_c2
         ->  Parallel Seq Scan on p1_c3_c1
         ->  Parallel Seq Scan on p1_c3_c2
         ->  Parallel Seq Scan on p2
         ->  Parallel Seq Scan on p2_c1
         ->  Parallel Seq Scan on p2_c2
         ->  Parallel Seq Scan on p2_c3
         ->  Parallel Seq Scan on p2_c4
         ->  Parallel Seq Scan on p2_c1_c1
         ->  Parallel Seq Scan on p2_c1_c2
         ->  Parallel Seq Scan on p2_c3_c1
         ->  Parallel Seq Scan on p2_c3_c2
(21 rows)

SET parallel_setup_cost to DEFAULT;
SET parallel_tuple_cost to DEFAULT;
SET min_parallel_relation_size to DEFAULT;
SET max_parallel_workers_per_gather to DEFAULT;
/*+Parallel(p1 10 hard)Parallel(p2 10 hard) */
EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
LOG:  pg_hint_plan:
used hint:
Parallel(p1 10 hard)
Parallel(p2 10 hard)
not used hint:
duplication hint:
error hint:

                QUERY PLAN                 
-------------------------------------------
 Gather
   Workers Planned: 10
   ->  Append
         ->  Parallel Seq Scan on p1
         ->  Parallel Seq Scan on p1_c1
         ->  Parallel Seq Scan on p1_c2
         ->  Parallel Seq Scan on p1_c3
         ->  Parallel Seq Scan on p1_c4
         ->  Parallel Seq Scan on p1_c1_c1
         ->  Parallel Seq Scan on p1_c1_c2
         ->  Parallel Seq Scan on p1_c3_c1
         ->  Parallel Seq Scan on p1_c3_c2
         ->  Parallel Seq Scan on p2
         ->  Parallel Seq Scan on p2_c1
         ->  Parallel Seq Scan on p2_c2
         ->  Parallel Seq Scan on p2_c3
         ->  Parallel Seq Scan on p2_c4
         ->  Parallel Seq Scan on p2_c1_c1
         ->  Parallel Seq Scan on p2_c1_c2
         ->  Parallel Seq Scan on p2_c3_c1
         ->  Parallel Seq Scan on p2_c3_c2
(21 rows)

-- num of workers of non-hinted relations should be default value
SET parallel_setup_cost to 0;
SET parallel_tuple_cost to 0;
SET min_parallel_relation_size to 0;
SET max_parallel_workers_per_gather to 3;
/*+Parallel(p1 10 hard) */
EXPLAIN (COSTS false) SELECT * FROM p1 join t1 on p1.id = t1.id;
LOG:  pg_hint_plan:
used hint:
Parallel(p1 10 hard)
not used hint:
duplication hint:
error hint:

                      QUERY PLAN                       
-------------------------------------------------------
 Hash Join
   Hash Cond: (t1.id = p1.id)
   ->  Gather
         Workers Planned: 3
         ->  Parallel Seq Scan on t1
   ->  Hash
         ->  Gather
               Workers Planned: 10
               ->  Append
                     ->  Parallel Seq Scan on p1
                     ->  Parallel Seq Scan on p1_c1
                     ->  Parallel Seq Scan on p1_c2
                     ->  Parallel Seq Scan on p1_c3
                     ->  Parallel Seq Scan on p1_c4
                     ->  Parallel Seq Scan on p1_c1_c1
                     ->  Parallel Seq Scan on p1_c1_c2
                     ->  Parallel Seq Scan on p1_c3_c1
                     ->  Parallel Seq Scan on p1_c3_c2
(18 rows)

-- Negative hint
SET parallel_setup_cost to 0;
SET parallel_tuple_cost to 0;
SET min_parallel_relation_size to 0;
SET max_parallel_workers_per_gather to 5;
EXPLAIN (COSTS false) SELECT * FROM p1;
                QUERY PLAN                 
-------------------------------------------
 Gather
   Workers Planned: 1
   ->  Append
         ->  Parallel Seq Scan on p1
         ->  Parallel Seq Scan on p1_c1
         ->  Parallel Seq Scan on p1_c2
         ->  Parallel Seq Scan on p1_c3
         ->  Parallel Seq Scan on p1_c4
         ->  Parallel Seq Scan on p1_c1_c1
         ->  Parallel Seq Scan on p1_c1_c2
         ->  Parallel Seq Scan on p1_c3_c1
         ->  Parallel Seq Scan on p1_c3_c2
(12 rows)

/*+Parallel(p1 0 hard)*/
EXPLAIN (COSTS false) SELECT * FROM p1;
LOG:  pg_hint_plan:
used hint:
Parallel(p1 0 hard)
not used hint:
duplication hint:
error hint:

         QUERY PLAN         
----------------------------
 Append
   ->  Seq Scan on p1
   ->  Seq Scan on p1_c1
   ->  Seq Scan on p1_c2
   ->  Seq Scan on p1_c3
   ->  Seq Scan on p1_c4
   ->  Seq Scan on p1_c1_c1
   ->  Seq Scan on p1_c1_c2
   ->  Seq Scan on p1_c3_c1
   ->  Seq Scan on p1_c3_c2
(10 rows)

ALTER SYSTEM SET session_preload_libraries TO DEFAULT;
SELECT pg_reload_conf();
 pg_reload_conf 
----------------
 t
(1 row)

